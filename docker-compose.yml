version: '3'
services:
  node-app:
    container_name: SimpleAppContainer
    ports:
      - "4000:4000"
    env_file:
      - ./.env     
    depends_on:      ## make mongo & redis build first 
      - mongo  
      - redis
      ##- postgres 
    deploy:
      replicas: 4
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on_failure
        delay: 5s
           
  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo_db:/data/db             
    environment:
      MONGO_INITDB_ROOT_USERNAME: root   ## type here uesr name
      MONGO_INITDB_ROOT_PASSWORD: example  ## password 

  # mongo-express:                 ### give you (ui) tool to handel DB
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false
  #     depends_on: mongo 

  redis:                          ## redis is used for memory data store 
   image: redis 

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf   ## move conf file to container
    depends_on:
      - node-app   
         # environment:
        # - NGINX_HOST=foobar.com
        # - NGINX_PORT=80


  # postgres:
  #     image: postgres
  #     restart: always
  #     volumes:
  #       -postgres_db:/var/lib/postgresql/data             
  #     environment:
  #       POSTGRES_USER: root   ## type here uesr name
  #       POSTGRES_PASSWORD: example  ## password



  volumes:
  - mongo_db          ## created volume mongo to save DB at disk 
 ##- postgres_db          ## created volume postgres to save DB at disk 